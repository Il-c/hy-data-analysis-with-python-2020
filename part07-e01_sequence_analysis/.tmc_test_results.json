[{"name": "test.test_sequence_analysis.EquilibriumDistribution.test_convergence", "status": "failed", "message": "\nNot equal to tolerance rtol=1e-07, atol=0.1\nFirst distribution did not seem to converge that strongly.\nMismatched elements: 4 / 4 (100%)\nMax absolute difference: 0.89733317\nMax relative difference: 6.8928588\n x: array([ 0.363452,  0.483119, -0.450016, -0.407889])\n y: array([ 0.083837,  0.339628,  0.447318, -0.051678])", "passed": false, "points": ["p07-01.22"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 1053, in test_convergence\n    err_msg=\"First distribution did not seem to converge that strongly.\")\n", "  File \"O:\\anaconda\\lib\\site-packages\\numpy\\testing\\_private\\utils.py\", line 1533, in assert_allclose\n    verbose=verbose, header=header, equal_nan=equal_nan)\n", "  File \"O:\\anaconda\\lib\\site-packages\\numpy\\testing\\_private\\utils.py\", line 846, in assert_array_compare\n    raise AssertionError(msg)\n"]}, {"name": "test.test_sequence_analysis.EquilibriumDistribution.test_eqd_correctness", "status": "failed", "message": "2 != 1 : There should be only one stationary distribution.", "passed": false, "points": ["p07-01.22"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 1035, in test_eqd_correctness\n    self.assertEqual(len(stationary_distributions), 1, msg=\"There should be only one stationary distribution.\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.StationaryDistribution.test_first", "status": "failed", "message": "\nNot equal to tolerance rtol=1e-07, atol=0.0001\n\nMismatched elements: 4 / 4 (100%)\nMax absolute difference: 1.06803917\nMax relative difference: 1.97950599\n x: array([-0.326502, -0.273919, -0.401372, -0.276667])\n y: array([0.333333, 0.      , 0.666667, 0.      ])", "passed": false, "points": ["p07-01.20"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 1008, in test_first\n    assert_allclose(distributions[0], [0.33333333, 0., 0.66666667,  0], atol=1e-04)\n", "  File \"O:\\anaconda\\lib\\site-packages\\numpy\\testing\\_private\\utils.py\", line 1533, in assert_allclose\n    verbose=verbose, header=header, equal_nan=equal_nan)\n", "  File \"O:\\anaconda\\lib\\site-packages\\numpy\\testing\\_private\\utils.py\", line 846, in assert_array_compare\n    raise AssertionError(msg)\n"]}, {"name": "test.test_sequence_analysis.StationaryInitialDistribution.test_correctness", "status": "failed", "message": "0.050895428421178 not greater than 0.5670502830045013 : divergences should converge towards 0.", "passed": false, "points": ["p07-01.21"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 1023, in test_correctness\n    self.assertGreater(results[i-1][1], results[i][1], msg=\"divergences should converge towards 0.\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1251, in assertGreater\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestCodonToProb.test_content", "status": "failed", "message": "'UUU' not found in {} : Codon UUU was not found in the dictionary!", "passed": false, "points": ["p07-01.5"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 318, in test_content\n    self.assertIn(\"UUU\", d, msg=\"Codon UUU was not found in the dictionary!\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1119, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestCodonToProb.test_size", "status": "failed", "message": "0 != 64", "passed": false, "points": ["p07-01.5"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 314, in test_size\n    self.assertEqual(len(d), 64)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestContextList.test_first", "status": "failed", "message": "0 != 9", "passed": false, "points": ["p07-01.10"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 554, in test_first\n    self.assertEqual(len(d), 9)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestContextList.test_random", "status": "failed", "message": "0 != 98", "passed": false, "points": ["p07-01.10"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 572, in test_random\n    self.assertEqual(sum([len(val) for key,val in d.items()]), n-k)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestContextProbabilities.test_empty_context", "status": "errored", "message": "''", "passed": false, "points": ["p07-01.11"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 624, in test_empty_context\n    self.assertAlmostEqual(d[\"\"], c, places=3)\n"]}, {"name": "test.test_sequence_analysis.TestContextProbabilities.test_first", "status": "failed", "message": "'AT' not found in {} : Context AT was not found in the result dictionary for parameters ATGATATCATCGACGATGTAG and 2!", "passed": false, "points": ["p07-01.11"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 593, in test_first\n    self.helper(d, \"AT\", \"G\", 0.400000)\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 582, in helper\n    self.assertIn(context, d, msg=\"Context %s was not found in the result dictionary for parameters %s and %i!\" % (context, s, k))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1119, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestContextProbabilities.test_random", "status": "passed", "message": "", "passed": true, "points": ["p07-01.11"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestDict.test_content", "status": "failed", "message": "'UUU' not found in {} : The dict did not contain key UUU", "passed": false, "points": ["p07-01.2"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 53, in test_content\n    self.assertIn(\"UUU\", d, msg=\"The dict did not contain key UUU\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1119, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestDict.test_size", "status": "failed", "message": "0 != 64 : Incorrect number of elements in the returned dict!", "passed": false, "points": ["p07-01.2"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 48, in test_size\n    self.assertEqual(len(d), 64, msg=\"Incorrect number of elements in the returned dict!\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestDictList.test_content", "status": "failed", "message": "'F' not found in {} : amino acid F not found in dictionary!", "passed": false, "points": ["p07-01.3"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 251, in test_content\n    self.assertIn(\"F\", d, msg=\"amino acid F not found in dictionary!\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1119, in assertIn\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestDictList.test_size", "status": "failed", "message": "0 != 21", "passed": false, "points": ["p07-01.3"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 296, in test_size\n    self.assertEqual(len(d), 21)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestDnaToProt.test_empty", "status": "passed", "message": "", "passed": true, "points": ["p07-01.4"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestDnaToProt.test_first", "status": "failed", "message": "'' != 'MISSTM*'\n+ MISSTM*", "passed": false, "points": ["p07-01.4"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 303, in test_first\n    self.assertEqual(dna_to_prot(\"ATGATATCATCGACGATGTAG\"), \"MISSTM*\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1233, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestDnaToRna.test_dna_to_rna", "status": "passed", "message": "", "passed": true, "points": ["p07-01.1"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestDnaToRna.test_dna_to_rna_empty", "status": "passed", "message": "", "passed": true, "points": ["p07-01.1"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestGenerateMarkov.test_content", "status": "failed", "message": "False is not true", "passed": false, "points": ["p07-01.12"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 654, in test_content\n    self.assertTrue(TestSlidingWindow.is_subset(s, \"ACGT\"))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 705, in assertTrue\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestGenerateMarkov.test_deterministic", "status": "passed", "message": "", "passed": true, "points": ["p07-01.12"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestGenerateMarkov.test_length", "status": "passed", "message": "", "passed": true, "points": ["p07-01.12"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestGenerateMarkov.test_parameter_usage", "status": "failed", "message": "'$$$$$$$$$$$$$$$$$$$$' != 'AAAAAAAAAAAAAAAAAAAA'\n- $$$$$$$$$$$$$$$$$$$$\n+ AAAAAAAAAAAAAAAAAAAA\n : With zeroth: {'A': 1} and kth: {'AA': {'A': 1}}, the generated sequence should be AAAAAAAAAAAAAAAAAAAA", "passed": false, "points": ["p07-01.12"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 676, in test_parameter_usage\n    msg=f\"With zeroth: {zeroth} and kth: {kth}, the generated sequence should be {'A'*20}\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1233, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestKmerIndex.test_first", "status": "failed", "message": "0 != 22", "passed": false, "points": ["p07-01.18"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 972, in test_first\n    self.assertEqual(len(positions), n - k + 1)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestKullbackLeibler.test_exception", "status": "failed", "message": "ZeroDivisionError not raised by kullback_leibler", "passed": false, "points": ["p07-01.19"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 992, in test_exception\n    self.assertRaises(ZeroDivisionError, kullback_leibler, q, p)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 756, in assertRaises\n    return context.handle('assertRaises', args, kwargs)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 178, in handle\n    callable_obj(*args, **kwargs)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 201, in __exit__\n    self.obj_name))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 135, in _raiseFailure\n    raise self.test_case.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestKullbackLeibler.test_first", "status": "failed", "message": "nan != 0.0 within 3 places (nan difference)", "passed": false, "points": ["p07-01.19"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 982, in test_first\n    self.assertAlmostEqual(kullback_leibler(p, p), 0.0, places=3)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestKullbackLeibler.test_second", "status": "failed", "message": "nan != 2.0 within 3 places (nan difference)", "passed": false, "points": ["p07-01.19"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 987, in test_second\n    self.assertAlmostEqual(kullback_leibler(p, q), 2.0, places=3)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestKullbackLeibler.test_single", "status": "failed", "message": "nan != 0.0 within 3 places (nan difference)", "passed": false, "points": ["p07-01.19"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 996, in test_single\n    self.assertAlmostEqual(kullback_leibler(p, p), 0.0, places=3)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestLowSpaceRequirement.test_first", "status": "failed", "message": "1 != 16", "passed": false, "points": ["p07-01.16"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 860, in test_first\n    self.assertEqual(len(d), 16)      # Number of 2-mers\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainLogProbability.test_first", "status": "failed", "message": "nan != -31.71783 within 5 places (nan difference)", "passed": false, "points": ["p07-01.15"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 831, in test_first\n    self.assertAlmostEqual(prob, -3.171783e+01, places=5)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainLogProbability.test_random", "status": "failed", "message": "nan not less than or equal to 0.0", "passed": false, "points": ["p07-01.15"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 838, in test_random\n    self.assertLessEqual(prob, 0.0)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1245, in assertLessEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainLogProbability.test_uniform", "status": "failed", "message": "nan != -8 within 7 places (nan difference)", "passed": false, "points": ["p07-01.15"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 850, in test_uniform\n    self.assertAlmostEqual(mc.log_probability(\"\".join(kmer)), -2*n)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainProbability.test_first", "status": "failed", "message": "nan != 2.83127e-10 within 10 places (nan difference)", "passed": false, "points": ["p07-01.14"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 804, in test_first\n    self.assertAlmostEqual(prob, 2.831270e-10, places=10)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainProbability.test_length_one", "status": "failed", "message": "nan != 0.32 within 10 places (nan difference) : Incorrect probability for sequence 'A'!", "passed": false, "points": ["p07-01.14"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 793, in test_length_one\n    msg=\"Incorrect probability for sequence 'A'!\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainProbability.test_random", "status": "failed", "message": "nan not greater than 0.0", "passed": false, "points": ["p07-01.14"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 811, in test_random\n    self.assertGreater(prob, 0.0)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1251, in assertGreater\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestMarkovChainProbability.test_uniform", "status": "failed", "message": "nan != 0.00390625 within 7 places (nan difference)", "passed": false, "points": ["p07-01.14"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 822, in test_uniform\n    self.assertAlmostEqual(mp.probability(\"\".join(kmer)), 0.25**4)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 906, in assertAlmostEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestProteinToMaxRNA.test_empty", "status": "passed", "message": "", "passed": true, "points": ["p07-01.6"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestProteinToMaxRNA.test_first", "status": "failed", "message": "'' != 'CUGACCCCCAUCCAGAACAGAGCC'\n+ CUGACCCCCAUCCAGAACAGAGCC", "passed": false, "points": ["p07-01.6"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 452, in test_first\n    self.assertEqual(ProteinToMaxRNA().convert(\"LTPIQNRA\"), \"CUGACCCCCAUCCAGAACAGAGCC\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1233, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestProteinToMaxRNA.test_second", "status": "failed", "message": "'' != 'GCCAGAAACCAGAUCCCCACCCUG'\n+ GCCAGAAACCAGAUCCCCACCCUG", "passed": false, "points": ["p07-01.6"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 455, in test_second\n    self.assertEqual(ProteinToMaxRNA().convert(\"ARNQIPTL\"), \"GCCAGAAACCAGAUCCCCACCCUG\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1233, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestProteinToRandomRNA.test_first", "status": "failed", "message": "0 != 24", "passed": false, "points": ["p07-01.8"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 498, in test_first\n    self.assertEqual(len(p.convert(\"LTPIQNRA\")), 24)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestProteinToRandomRNA.test_random", "status": "failed", "message": "3 != 0", "passed": false, "points": ["p07-01.8"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 505, in test_random\n    self.assertEqual(length*3, len(rna))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestPseudoCounts.test_generation", "status": "passed", "message": "", "passed": true, "points": ["p07-01.13"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestPseudoCounts.test_order_0", "status": "failed", "message": "Items in the second set but not the first:\n'A'\n'C'\n'T'\n'G' : There should be exactly one probability for each of the four nucleotides!", "passed": false, "points": ["p07-01.13"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 690, in test_order_0\n    msg=\"There should be exactly one probability for each of the four nucleotides!\")\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1112, in assertSetEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestPseudoCounts.test_order_2", "status": "failed", "message": "1 != 16", "passed": false, "points": ["p07-01.13"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 700, in test_order_2\n    self.assertEqual(len(d), 16)      # Number of 2-mers\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestRandomEvent.test_first", "status": "passed", "message": "", "passed": true, "points": ["p07-01.7"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestRandomEvent.test_probs", "status": "failed", "message": "\nNot equal to tolerance rtol=1e-07, atol=0.1\nThe probabilities do not seem to converge to the underlying distribution.\nMismatched elements: 4 / 4 (100%)\nMax absolute difference: 0.9\nMax relative difference: 9.\n x: array([1., 0., 0., 0.])\n y: array([0.1 , 0.35, 0.15, 0.4 ])", "passed": false, "points": ["p07-01.7"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 483, in test_probs\n    err_msg=\"The probabilities do not seem to converge to the underlying distribution.\")\n", "  File \"O:\\anaconda\\lib\\site-packages\\numpy\\testing\\_private\\utils.py\", line 1533, in assert_allclose\n    verbose=verbose, header=header, equal_nan=equal_nan)\n", "  File \"O:\\anaconda\\lib\\site-packages\\numpy\\testing\\_private\\utils.py\", line 846, in assert_array_compare\n    raise AssertionError(msg)\n"]}, {"name": "test.test_sequence_analysis.TestRandomEvent.test_second", "status": "passed", "message": "", "passed": true, "points": ["p07-01.7"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestSampleFromConcatenation.test_deterministic", "status": "passed", "message": "", "passed": true, "points": ["p07-01.17"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestSampleFromConcatenation.test_length_one", "status": "passed", "message": "", "passed": true, "points": ["p07-01.17"], "backtrace": []}, {"name": "test.test_sequence_analysis.TestSampleFromConcatenation.test_second", "status": "failed", "message": "False is not true : The generated string Q contains non-nucleotide characters!", "passed": false, "points": ["p07-01.17"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 958, in test_second\n    self.assertTrue(TestSlidingWindow.is_subset(s2, \"ACGT\"), msg=\"The generated string %s contains non-nucleotide characters!\" % s2)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 705, in assertTrue\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestSlidingWindow.test_first", "status": "failed", "message": "{'T': 1, 'C': 1, 'A': 1, 'G': 1} != {}\n- {'A': 1, 'C': 1, 'G': 1, 'T': 1}\n+ {}", "passed": false, "points": ["p07-01.9"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 535, in test_first\n    self.assertEqual(d1, d2)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 1151, in assertDictEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 693, in fail\n    raise self.failureException(msg)\n"]}, {"name": "test.test_sequence_analysis.TestSlidingWindow.test_random", "status": "failed", "message": "0 != 1", "passed": false, "points": ["p07-01.9"], "backtrace": ["  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 59, in testPartExecutor\n    yield\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 628, in run\n    testMethod()\n", "  File \"C:\\Users\\Vstore\\AppData\\Roaming\\Code\\User\\globalStorage\\moocfi.test-my-code\\tmcdata\\TMC workspace\\Exercises\\hy\\hy-data-analysis-with-python-2020\\part07-e01_sequence_analysis\\test\\test_sequence_analysis.py\", line 542, in test_random\n    self.assertEqual(sum(d.values()), k)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 852, in assertEqual\n    assertion_func(first, second, msg=msg)\n", "  File \"O:\\anaconda\\lib\\unittest\\case.py\", line 845, in _baseAssertEqual\n    raise self.failureException(msg)\n"]}]